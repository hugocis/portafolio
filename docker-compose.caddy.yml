version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: portafolios_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-portafolios}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - portafolios_network

  # Aplicación Next.js
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: portafolios_app
    expose:
      - "3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/portafolios}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://herokku.duckdns.org}
      - OAUTH_GITHUB_ID=${OAUTH_GITHUB_ID:-}
      - OAUTH_GITHUB_SECRET=${OAUTH_GITHUB_SECRET:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - portafolios_network

  # Caddy Proxy Inverso con HTTPS automático
  caddy:
    image: caddy:2-alpine
    container_name: portafolios_caddy
    restart: unless-stopped
    ports:
      - "80:80"       # HTTP (redirige a HTTPS)
      - "443:443"     # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=herokku.duckdns.org
    depends_on:
      - app
    networks:
      - portafolios_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  portafolios_network:
    driver: bridge
